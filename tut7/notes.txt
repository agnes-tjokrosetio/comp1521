////////////////////////////////////////////////////////////////////////////////////////////////////
----------------------
HEXADECIMAL TO DECIMAL
----------------------

0x0013
=

0x0444
=

0x1234
=

0xFFFF
= 

0x8000
= 

////////////////////////////////////////////////////////////////////////////////////////////////////
-------------------------------------
DECIMAL TO BINARY, HEXADECIMAL, OCTAL
-------------------------------------

1
=>


100
=>


1000
=>


10000
=>


100000
=>


-5
=> 5 


-100
=> 100 


////////////////////////////////////////////////////////////////////////////////////////////////////
-----------------
FLOATS TO DECIMAL
-----------------

Recall: (-1)^(sign) x (1 + fraction) x 2^(exp-127)

0 00000000 00000000000000000000000
sign = 
exp = 
frac = 
=> Result = 

1 00000000 00000000000000000000000
sign = 
exp = 
frac = 
=> Result = 

0 01111111 10000000000000000000000
sign = 
exp = 
frac = 
=> Result = 

0 01111110 00000000000000000000000
sign = 
exp = 
frac = 
=> Result = 

0 01111110 11111111111111111111111
sign = 
exp = 
frac = 
=> Result = 

0 10000000 01100000000000000000000
sign = 
exp = 
frac = 
=> Result = 

0 10010100 10000000000000000000000
sign = 
exp = 
frac = 
=> Result = 

0 01101110 10100000101000001010000
sign = 
exp = 
frac = 
=> Result = 


////////////////////////////////////////////////////////////////////////////////////////////////////
------------------
DECIMALS TO FLOATS
------------------

Recall: (-1)^(sign) x (1 + fraction) x 2^(exp-127)

Goal: some number k, (-1)^sign x (1+frac) x 2^n, n = exp-127

2.5 = 


0.375 = 


27 = 


100 = 



////////////////////////////////////////////////////////////////////////////////////////////////////
----------------------
APPLICATIONS OF FLOATS
----------------------

extract components of floats



given components, then combine floats


